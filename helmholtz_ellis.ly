%{

Defines Helmholtz-Ellis just intonation accidentals, designed by Marc Sabat & Wolfgang von Schweinitz.

%}

#(define-public SHARP 2187/2048)
#(define-public SYN 81/80)
#(define-public SEPT 64/63)
#(define-public UNDEC 33/32)
#(define-public TRIDEC 27/26)

%{

Define pitch names
These do not tune the MIDI output properly, because they are meant to be multiplied rather than added to the tuning.

%}

helmholtzEllisNames = #`(

  ;; U- for up
  (c . ,(ly:make-pitch -1 0 NATURAL))
  (d . ,(ly:make-pitch -1 1 NATURAL))
  (e . ,(ly:make-pitch -1 2 NATURAL))
  (f . ,(ly:make-pitch -1 3 NATURAL))
  (g . ,(ly:make-pitch -1 4 NATURAL))
  (a . ,(ly:make-pitch -1 5 NATURAL))
  (b . ,(ly:make-pitch -1 6 NATURAL))
  
  (csharp . ,(ly:make-pitch -1 0 SHARP))
  (dsharp . ,(ly:make-pitch -1 1 SHARP))
  (esharp . ,(ly:make-pitch -1 2 SHARP))
  (fsharp . ,(ly:make-pitch -1 3 SHARP))
  (gsharp . ,(ly:make-pitch -1 4 SHARP))
  (asharp . ,(ly:make-pitch -1 5 SHARP))
  (bsharp . ,(ly:make-pitch -1 6 SHARP))

  (cUf . ,(ly:make-pitch -1 0 SYN))
  (dUf . ,(ly:make-pitch -1 1 SYN))
  (eUf . ,(ly:make-pitch -1 2 SYN))
  (fUf . ,(ly:make-pitch -1 3 SYN))
  (gUf . ,(ly:make-pitch -1 4 SYN))
  (aUf . ,(ly:make-pitch -1 5 SYN))
  (bUf . ,(ly:make-pitch -1 6 SYN))

  (cUs . ,(ly:make-pitch -1 0 SEPT))
  (dUs . ,(ly:make-pitch -1 1 SEPT))
  (eUs . ,(ly:make-pitch -1 2 SEPT))
  (fUs . ,(ly:make-pitch -1 3 SEPT))
  (gUs . ,(ly:make-pitch -1 4 SEPT))
  (aUs . ,(ly:make-pitch -1 5 SEPT))
  (bUs . ,(ly:make-pitch -1 6 SEPT))

  ;; single-arrow alterations of sharps

  (csharpUf . ,(ly:make-pitch -1 0 (* SHARP SYN)))
  (dsharpUf . ,(ly:make-pitch -1 1 (* SHARP SYN)))
  (esharpUf . ,(ly:make-pitch -1 2 (* SHARP SYN)))
  (fsharpUf . ,(ly:make-pitch -1 3 (* SHARP SYN)))
  (gsharpUf . ,(ly:make-pitch -1 4 (* SHARP SYN)))
  (asharpUf . ,(ly:make-pitch -1 5 (* SHARP SYN)))
  (bsharpUf . ,(ly:make-pitch -1 6 (* SHARP SYN)))

  (csharpDf . ,(ly:make-pitch -1 0 (/ SHARP SYN)))
  (dsharpDf . ,(ly:make-pitch -1 1 (/ SHARP SYN)))
  (esharpDf . ,(ly:make-pitch -1 2 (/ SHARP SYN)))
  (fsharpDf . ,(ly:make-pitch -1 3 (/ SHARP SYN)))
  (gsharpDf . ,(ly:make-pitch -1 4 (/ SHARP SYN)))
  (asharpDf . ,(ly:make-pitch -1 5 (/ SHARP SYN)))
  (bsharpDf . ,(ly:make-pitch -1 6 (/ SHARP SYN)))
  
  (csharpDfDf . ,(ly:make-pitch -1 0 (/ SHARP (* SYN SYN))))
  (dsharpDfDf . ,(ly:make-pitch -1 1 (/ SHARP (* SYN SYN))))
  (esharpDfDf . ,(ly:make-pitch -1 2 (/ SHARP (* SYN SYN))))
  (fsharpDfDf . ,(ly:make-pitch -1 3 (/ SHARP (* SYN SYN))))
  (gsharpDfDf . ,(ly:make-pitch -1 4 (/ SHARP (* SYN SYN))))
  (asharpDfDf . ,(ly:make-pitch -1 5 (/ SHARP (* SYN SYN))))
  (bsharpDfDf . ,(ly:make-pitch -1 6 (/ SHARP (* SYN SYN))))
  
  (csharpUs . ,(ly:make-pitch -1 0 (* SHARP SEPT)))
  (dsharpUs . ,(ly:make-pitch -1 1 (* SHARP SEPT)))
  (esharpUs . ,(ly:make-pitch -1 2 (* SHARP SEPT)))
  (fsharpUs . ,(ly:make-pitch -1 3 (* SHARP SEPT)))
  (gsharpUs . ,(ly:make-pitch -1 4 (* SHARP SEPT)))
  (asharpUs . ,(ly:make-pitch -1 5 (* SHARP SEPT)))
  (bsharpUs . ,(ly:make-pitch -1 6 (* SHARP SEPT)))
  
  (csharpUsUs . ,(ly:make-pitch -1 0 (* SHARP SEPT SEPT)))
  (dsharpUsUs . ,(ly:make-pitch -1 1 (* SHARP SEPT SEPT)))
  (esharpUsUs . ,(ly:make-pitch -1 2 (* SHARP SEPT SEPT)))
  (fsharpUsUs . ,(ly:make-pitch -1 3 (* SHARP SEPT SEPT)))
  (gsharpUsUs . ,(ly:make-pitch -1 4 (* SHARP SEPT SEPT)))
  (asharpUsUs . ,(ly:make-pitch -1 5 (* SHARP SEPT SEPT)))
  (bsharpUsUs . ,(ly:make-pitch -1 6 (* SHARP SEPT SEPT)))
  
  ;; compound 7-limit alterations of sharps
  
  (csharpDfUs . ,(ly:make-pitch -1 0 (* SHARP (/ SEPT SYN))))
  (dsharpDfUs . ,(ly:make-pitch -1 1 (* SHARP (/ SEPT SYN))))
  (esharpDfUs . ,(ly:make-pitch -1 2 (* SHARP (/ SEPT SYN))))
  (fsharpDfUs . ,(ly:make-pitch -1 3 (* SHARP (/ SEPT SYN))))
  (gsharpDfUs . ,(ly:make-pitch -1 4 (* SHARP (/ SEPT SYN))))
  (asharpDfUs . ,(ly:make-pitch -1 5 (* SHARP (/ SEPT SYN))))
  (bsharpDfUs . ,(ly:make-pitch -1 6 (* SHARP (/ SEPT SYN)))) 
  
  (csharpDfDs . ,(ly:make-pitch -1 0 (* SHARP (/ 1 SEPT) (/ 1 SYN))))
  (dsharpDfDs . ,(ly:make-pitch -1 1 (* SHARP (/ 1 SEPT) (/ 1 SYN))))
  (esharpDfDs . ,(ly:make-pitch -1 2 (* SHARP (/ 1 SEPT) (/ 1 SYN))))
  (fsharpDfDs . ,(ly:make-pitch -1 3 (* SHARP (/ 1 SEPT) (/ 1 SYN))))
  (gsharpDfDs . ,(ly:make-pitch -1 4 (* SHARP (/ 1 SEPT) (/ 1 SYN))))
  (asharpDfDs . ,(ly:make-pitch -1 5 (* SHARP (/ 1 SEPT) (/ 1 SYN))))
  (bsharpDfDs . ,(ly:make-pitch -1 6 (* SHARP (/ 1 SEPT) (/ 1 SYN))))
  
  ;; 7-limit alterations of naturals
  
  (cUfUs . ,(ly:make-pitch -1 0 (* SEPT SYN)))
  (dUfUs . ,(ly:make-pitch -1 1 (* SEPT SYN)))
  (eUfUs . ,(ly:make-pitch -1 2 (* SEPT SYN)))
  (fUfUs . ,(ly:make-pitch -1 3 (* SEPT SYN)))
  (gUfUs . ,(ly:make-pitch -1 4 (* SEPT SYN)))
  (aUfUs . ,(ly:make-pitch -1 5 (* SEPT SYN)))
  (bUfUs . ,(ly:make-pitch -1 6 (* SEPT SYN)))
  
  ;; undecimal (quarter-tone) sharp

  (cUe . ,(ly:make-pitch -1 0 UNDEC))
  (dUe . ,(ly:make-pitch -1 1 UNDEC))
  (eUe . ,(ly:make-pitch -1 2 UNDEC))
  (fUe . ,(ly:make-pitch -1 3 UNDEC))
  (gUe . ,(ly:make-pitch -1 4 UNDEC))
  (aUe . ,(ly:make-pitch -1 5 UNDEC))
  (bUe . ,(ly:make-pitch -1 6 UNDEC))
  
  (cUsUe . ,(ly:make-pitch -1 0 (* SEPT UNDEC)))
  (dUsUe . ,(ly:make-pitch -1 1 (* SEPT UNDEC)))
  (eUsUe . ,(ly:make-pitch -1 2 (* SEPT UNDEC)))
  (fUsUe . ,(ly:make-pitch -1 3 (* SEPT UNDEC)))
  (gUsUe . ,(ly:make-pitch -1 4 (* SEPT UNDEC)))
  (aUsUe . ,(ly:make-pitch -1 5 (* SEPT UNDEC)))
  (bUsUe . ,(ly:make-pitch -1 6 (* SEPT UNDEC)))
  
  (cflatUe . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) UNDEC)))
  (dflatUe . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) UNDEC)))
  (eflatUe . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) UNDEC)))
  (fflatUe . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) UNDEC)))
  (gflatUe . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) UNDEC)))
  (aflatUe . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) UNDEC)))
  (bflatUe . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) UNDEC)))
  
  (cflatDsUe . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) (/ 1 SEPT) UNDEC)))
  (dflatDsUe . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) (/ 1 SEPT) UNDEC)))
  (eflatDsUe . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) (/ 1 SEPT) UNDEC)))
  (fflatDsUe . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) (/ 1 SEPT) UNDEC)))
  (gflatDsUe . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) (/ 1 SEPT) UNDEC)))
  (aflatDsUe . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) (/ 1 SEPT) UNDEC)))
  (bflatDsUe . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) (/ 1 SEPT) UNDEC)))
  
  (cflatDsDsUe . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (dflatDsDsUe . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (eflatDsDsUe . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (fflatDsDsUe . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (gflatDsDsUe . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (aflatDsDsUe . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (bflatDsDsUe . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  
  (cflatUfDsDsUe . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (dflatUfDsDsUe . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (eflatUfDsDsUe . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (fflatUfDsDsUe . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (gflatUfDsDsUe . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (aflatUfDsDsUe . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (bflatUfDsDsUe . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  
  (cDfUe . ,(ly:make-pitch -1 0 (/ UNDEC SYN)))
  (dDfUe . ,(ly:make-pitch -1 1 (/ UNDEC SYN)))
  (eDfUe . ,(ly:make-pitch -1 2 (/ UNDEC SYN)))
  (fDfUe . ,(ly:make-pitch -1 3 (/ UNDEC SYN)))
  (gDfUe . ,(ly:make-pitch -1 4 (/ UNDEC SYN)))
  (aDfUe . ,(ly:make-pitch -1 5 (/ UNDEC SYN)))
  (bDfUe . ,(ly:make-pitch -1 6 (/ UNDEC SYN)))
  
  (csharpDsDsUe . ,(ly:make-pitch -1 0 (* SHARP (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (dsharpDsDsUe . ,(ly:make-pitch -1 1 (* SHARP (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (esharpDsDsUe . ,(ly:make-pitch -1 2 (* SHARP (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (fsharpDsDsUe . ,(ly:make-pitch -1 3 (* SHARP (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (gsharpDsDsUe . ,(ly:make-pitch -1 4 (* SHARP (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (asharpDsDsUe . ,(ly:make-pitch -1 5 (* SHARP (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (bsharpDsDsUe . ,(ly:make-pitch -1 6 (* SHARP (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  
  (csharpUfDsDsUe . ,(ly:make-pitch -1 0 (* SHARP SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (dsharpUfDsDsUe . ,(ly:make-pitch -1 1 (* SHARP SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (esharpUfDsDsUe . ,(ly:make-pitch -1 2 (* SHARP SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (fsharpUfDsDsUe . ,(ly:make-pitch -1 3 (* SHARP SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (gsharpUfDsDsUe . ,(ly:make-pitch -1 4 (* SHARP SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (asharpUfDsDsUe . ,(ly:make-pitch -1 5 (* SHARP SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))
  (bsharpUfDsDsUe . ,(ly:make-pitch -1 6 (* SHARP SYN (/ 1 SEPT) (/ 1 SEPT) UNDEC)))

  ;; change alterations, add glyphs
  (cdoublesharpDfDfDf . ,(ly:make-pitch -1 0 (* SHARP)))
  (ddoublesharpDfDfDf . ,(ly:make-pitch -1 1 (* SHARP)))
  (edoublesharpDfDfDf . ,(ly:make-pitch -1 2 (* SHARP)))
  (fdoublesharpDfDfDf . ,(ly:make-pitch -1 3 (* SHARP)))
  (gdoublesharpDfDfDf . ,(ly:make-pitch -1 4 (* SHARP)))
  (adoublesharpDfDfDf . ,(ly:make-pitch -1 5 (* SHARP)))
  (bdoublesharpDfDfDf . ,(ly:make-pitch -1 6 (* SHARP)))

  ;; change alterations, add glyphs
  (cdoublesharpDfDf . ,(ly:make-pitch -1 0 (* SHARP SHARP)))
  (ddoublesharpDfDf . ,(ly:make-pitch -1 1 (* SHARP SHARP)))
  (edoublesharpDfDf . ,(ly:make-pitch -1 2 (* SHARP SHARP)))
  (fdoublesharpDfDf . ,(ly:make-pitch -1 3 (* SHARP SHARP)))
  (gdoublesharpDfDf . ,(ly:make-pitch -1 4 (* SHARP SHARP)))
  (adoublesharpDfDf . ,(ly:make-pitch -1 5 (* SHARP SHARP)))
  (bdoublesharpDfDf . ,(ly:make-pitch -1 6 (* SHARP SHARP)))

  ;; D- for down
  (cflat . ,(ly:make-pitch -1 0 (/ 1 SHARP)))
  (dflat . ,(ly:make-pitch -1 1 (/ 1 SHARP)))
  (eflat . ,(ly:make-pitch -1 2 (/ 1 SHARP)))
  (fflat . ,(ly:make-pitch -1 3 (/ 1 SHARP)))
  (gflat . ,(ly:make-pitch -1 4 (/ 1 SHARP)))
  (aflat . ,(ly:make-pitch -1 5 (/ 1 SHARP)))
  (bflat . ,(ly:make-pitch -1 6 (/ 1 SHARP)))

  (cDf . ,(ly:make-pitch -1 0 (/ 1 SYN)))
  (dDf . ,(ly:make-pitch -1 1 (/ 1 SYN)))
  (eDf . ,(ly:make-pitch -1 2 (/ 1 SYN)))
  (fDf . ,(ly:make-pitch -1 3 (/ 1 SYN)))
  (gDf . ,(ly:make-pitch -1 4 (/ 1 SYN)))
  (aDf . ,(ly:make-pitch -1 5 (/ 1 SYN)))
  (bDf . ,(ly:make-pitch -1 6 (/ 1 SYN)))

  (cDs . ,(ly:make-pitch -1 0 (/ 1 SEPT)))
  (dDs . ,(ly:make-pitch -1 1 (/ 1 SEPT)))
  (eDs . ,(ly:make-pitch -1 2 (/ 1 SEPT)))
  (fDs . ,(ly:make-pitch -1 3 (/ 1 SEPT)))
  (gDs . ,(ly:make-pitch -1 4 (/ 1 SEPT)))
  (aDs . ,(ly:make-pitch -1 5 (/ 1 SEPT)))
  (bDs . ,(ly:make-pitch -1 6 (/ 1 SEPT)))
  
  (cDfDs . ,(ly:make-pitch -1 0 (/ (/ 1 SYN) SEPT)))
  (dDfDs . ,(ly:make-pitch -1 1 (/ (/ 1 SYN) SEPT)))
  (eDfDs . ,(ly:make-pitch -1 2 (/ (/ 1 SYN) SEPT)))
  (fDfDs . ,(ly:make-pitch -1 3 (/ (/ 1 SYN) SEPT)))
  (gDfDs . ,(ly:make-pitch -1 4 (/ (/ 1 SYN) SEPT)))
  (aDfDs . ,(ly:make-pitch -1 5 (/ (/ 1 SYN) SEPT)))
  (bDfDs . ,(ly:make-pitch -1 6 (/ (/ 1 SYN) SEPT)))
  
  (cDfUs . ,(ly:make-pitch -1 0 (* (/ 1 SYN) SEPT)))
  (dDfUs . ,(ly:make-pitch -1 1 (* (/ 1 SYN) SEPT)))
  (eDfUs . ,(ly:make-pitch -1 2 (* (/ 1 SYN) SEPT)))
  (fDfUs . ,(ly:make-pitch -1 3 (* (/ 1 SYN) SEPT)))
  (gDfUs . ,(ly:make-pitch -1 4 (* (/ 1 SYN) SEPT)))
  (aDfUs . ,(ly:make-pitch -1 5 (* (/ 1 SYN) SEPT)))
  (bDfUs . ,(ly:make-pitch -1 6 (* (/ 1 SYN) SEPT)))

  (cDsDs . ,(ly:make-pitch -1 0 (/ (/ 1 SEPT) SEPT)))
  (dDsDs . ,(ly:make-pitch -1 1 (/ (/ 1 SEPT) SEPT)))
  (eDsDs . ,(ly:make-pitch -1 2 (/ (/ 1 SEPT) SEPT)))
  (fDsDs . ,(ly:make-pitch -1 3 (/ (/ 1 SEPT) SEPT)))
  (gDsDs . ,(ly:make-pitch -1 4 (/ (/ 1 SEPT) SEPT)))
  (aDsDs . ,(ly:make-pitch -1 5 (/ (/ 1 SEPT) SEPT)))
  (bDsDs . ,(ly:make-pitch -1 6 (/ (/ 1 SEPT) SEPT)))
  
  (cDsDsDs . ,(ly:make-pitch -1 0 (/ (/ (/ 1 SEPT) SEPT) SEPT)))
  (dDsDsDs . ,(ly:make-pitch -1 1 (/ (/ (/ 1 SEPT) SEPT) SEPT)))
  (eDsDsDs . ,(ly:make-pitch -1 2 (/ (/ (/ 1 SEPT) SEPT) SEPT)))
  (fDsDsDs . ,(ly:make-pitch -1 3 (/ (/ (/ 1 SEPT) SEPT) SEPT)))
  (gDsDsDs . ,(ly:make-pitch -1 4 (/ (/ (/ 1 SEPT) SEPT) SEPT)))
  (aDsDsDs . ,(ly:make-pitch -1 5 (/ (/ (/ 1 SEPT) SEPT) SEPT)))
  (bDsDsDs . ,(ly:make-pitch -1 6 (/ (/ (/ 1 SEPT) SEPT) SEPT)))
  
  (cflatUf . ,(ly:make-pitch -1 0 (/ SYN SHARP)))
  (dflatUf . ,(ly:make-pitch -1 1 (/ SYN SHARP)))
  (eflatUf . ,(ly:make-pitch -1 2 (/ SYN SHARP)))
  (fflatUf . ,(ly:make-pitch -1 3 (/ SYN SHARP)))
  (gflatUf . ,(ly:make-pitch -1 4 (/ SYN SHARP)))
  (aflatUf . ,(ly:make-pitch -1 5 (/ SYN SHARP)))
  (bflatUf . ,(ly:make-pitch -1 6 (/ SYN SHARP)))
  
  (cflatUfUs . ,(ly:make-pitch -1 0 (* SYN SEPT (/ 1 SHARP))))
  (dflatUfUs . ,(ly:make-pitch -1 1 (* SYN SEPT (/ 1 SHARP))))
  (eflatUfUs . ,(ly:make-pitch -1 2 (* SYN SEPT (/ 1 SHARP))))
  (fflatUfUs . ,(ly:make-pitch -1 3 (* SYN SEPT (/ 1 SHARP))))
  (gflatUfUs . ,(ly:make-pitch -1 4 (* SYN SEPT (/ 1 SHARP))))
  (aflatUfUs . ,(ly:make-pitch -1 5 (* SYN SEPT (/ 1 SHARP))))
  (bflatUfUs . ,(ly:make-pitch -1 6 (* SYN SEPT (/ 1 SHARP))))

  (cflatDs . ,(ly:make-pitch -1 0 (/ (/ 1 SEPT) SHARP)))
  (dflatDs . ,(ly:make-pitch -1 1 (/ (/ 1 SEPT) SHARP)))
  (eflatDs . ,(ly:make-pitch -1 2 (/ (/ 1 SEPT) SHARP)))
  (fflatDs . ,(ly:make-pitch -1 3 (/ (/ 1 SEPT) SHARP)))
  (gflatDs . ,(ly:make-pitch -1 4 (/ (/ 1 SEPT) SHARP)))
  (aflatDs . ,(ly:make-pitch -1 5 (/ (/ 1 SEPT) SHARP)))
  (bflatDs . ,(ly:make-pitch -1 6 (/ (/ 1 SEPT) SHARP)))
  
  (cflatUs . ,(ly:make-pitch -1 0 (* SEPT (/ 1 SHARP))))
  (dflatUs . ,(ly:make-pitch -1 1 (* SEPT (/ 1 SHARP))))
  (eflatUs . ,(ly:make-pitch -1 2 (* SEPT (/ 1 SHARP))))
  (fflatUs . ,(ly:make-pitch -1 3 (* SEPT (/ 1 SHARP))))
  (gflatUs . ,(ly:make-pitch -1 4 (* SEPT (/ 1 SHARP))))
  (aflatUs . ,(ly:make-pitch -1 5 (* SEPT (/ 1 SHARP))))
  (bflatUs . ,(ly:make-pitch -1 6 (* SEPT (/ 1 SHARP))))
  
  (cflatDsDs . ,(ly:make-pitch -1 0 (/ (/ (/ 1 SEPT) SHARP) SEPT)))
  (dflatDsDs . ,(ly:make-pitch -1 1 (/ (/ (/ 1 SEPT) SHARP) SEPT)))
  (eflatDsDs . ,(ly:make-pitch -1 2 (/ (/ (/ 1 SEPT) SHARP) SEPT)))
  (fflatDsDs . ,(ly:make-pitch -1 3 (/ (/ (/ 1 SEPT) SHARP) SEPT)))
  (gflatDsDs . ,(ly:make-pitch -1 4 (/ (/ (/ 1 SEPT) SHARP) SEPT)))
  (aflatDsDs . ,(ly:make-pitch -1 5 (/ (/ (/ 1 SEPT) SHARP) SEPT)))
  (bflatDsDs . ,(ly:make-pitch -1 6 (/ (/ (/ 1 SEPT) SHARP) SEPT)))
  
  (cflatDsDsDs . ,(ly:make-pitch -1 0 (/ (/ (/ (/ 1 SEPT) SHARP) SEPT) SEPT)))
  (dflatDsDsDs . ,(ly:make-pitch -1 1 (/ (/ (/ (/ 1 SEPT) SHARP) SEPT) SEPT)))
  (eflatDsDsDs . ,(ly:make-pitch -1 2 (/ (/ (/ (/ 1 SEPT) SHARP) SEPT) SEPT)))
  (fflatDsDsDs . ,(ly:make-pitch -1 3 (/ (/ (/ (/ 1 SEPT) SHARP) SEPT) SEPT)))
  (gflatDsDsDs . ,(ly:make-pitch -1 4 (/ (/ (/ (/ 1 SEPT) SHARP) SEPT) SEPT)))
  (aflatDsDsDs . ,(ly:make-pitch -1 5 (/ (/ (/ (/ 1 SEPT) SHARP) SEPT) SEPT)))
  (bflatDsDsDs . ,(ly:make-pitch -1 6 (/ (/ (/ (/ 1 SEPT) SHARP) SEPT) SEPT)))

  (cflatUfDs . ,(ly:make-pitch -1 0 (/ (/ SYN SEPT) SHARP)))
  (dflatUfDs . ,(ly:make-pitch -1 1 (/ (/ SYN SEPT) SHARP)))
  (eflatUfDs . ,(ly:make-pitch -1 2 (/ (/ SYN SEPT) SHARP)))
  (fflatUfDs . ,(ly:make-pitch -1 3 (/ (/ SYN SEPT) SHARP)))
  (gflatUfDs . ,(ly:make-pitch -1 4 (/ (/ SYN SEPT) SHARP)))
  (aflatUfDs . ,(ly:make-pitch -1 5 (/ (/ SYN SEPT) SHARP)))
  (bflatUfDs . ,(ly:make-pitch -1 6 (/ (/ SYN SEPT) SHARP)))

  (cflatUfUf . ,(ly:make-pitch -1 0 (/ (* SYN SYN) SHARP)))
  (dflatUfUf . ,(ly:make-pitch -1 1 (/ (* SYN SYN) SHARP)))
  (eflatUfUf . ,(ly:make-pitch -1 2 (/ (* SYN SYN) SHARP)))
  (fflatUfUf . ,(ly:make-pitch -1 3 (/ (* SYN SYN) SHARP)))
  (gflatUfUf . ,(ly:make-pitch -1 4 (/ (* SYN SYN) SHARP)))
  (aflatUfUf . ,(ly:make-pitch -1 5 (/ (* SYN SYN) SHARP)))
  (bflatUfUf . ,(ly:make-pitch -1 6 (/ (* SYN SYN) SHARP)))

  (cdoubleflatUfUf . ,(ly:make-pitch -1 0 (/ (* SYN SYN) (* SHARP SHARP))))
  (ddoubleflatUfUf . ,(ly:make-pitch -1 1 (/ (* SYN SYN) (* SHARP SHARP))))
  (edoubleflatUfUf . ,(ly:make-pitch -1 2 (/ (* SYN SYN) (* SHARP SHARP))))
  (fdoubleflatUfUf . ,(ly:make-pitch -1 3 (/ (* SYN SYN) (* SHARP SHARP))))
  (gdoubleflatUfUf . ,(ly:make-pitch -1 4 (/ (* SYN SYN) (* SHARP SHARP))))
  (adoubleflatUfUf . ,(ly:make-pitch -1 5 (/ (* SYN SYN) (* SHARP SHARP))))
  (bdoubleflatUfUf . ,(ly:make-pitch -1 6 (/ (* SYN SYN) (* SHARP SHARP))))

  (cdoubleflatUf . ,(ly:make-pitch -1 0 (/ (* SYN) (* SHARP SHARP))))
  (ddoubleflatUf . ,(ly:make-pitch -1 1 (/ (* SYN) (* SHARP SHARP))))
  (edoubleflatUf . ,(ly:make-pitch -1 2 (/ (* SYN) (* SHARP SHARP))))
  (fdoubleflatUf . ,(ly:make-pitch -1 3 (/ (* SYN) (* SHARP SHARP))))
  (gdoubleflatUf . ,(ly:make-pitch -1 4 (/ (* SYN) (* SHARP SHARP))))
  (adoubleflatUf . ,(ly:make-pitch -1 5 (/ (* SYN) (* SHARP SHARP))))
  (bdoubleflatUf . ,(ly:make-pitch -1 6 (/ (* SYN) (* SHARP SHARP))))

  (cflatDe . ,(ly:make-pitch -1 0 (/ 1 (* SHARP UNDEC))))
  (dflatDe . ,(ly:make-pitch -1 1 (/ 1 (* SHARP UNDEC))))
  (eflatDe . ,(ly:make-pitch -1 2 (/ 1 (* SHARP UNDEC))))
  (fflatDe . ,(ly:make-pitch -1 3 (/ 1 (* SHARP UNDEC))))
  (gflatDe . ,(ly:make-pitch -1 4 (/ 1 (* SHARP UNDEC))))
  (aflatDe . ,(ly:make-pitch -1 5 (/ 1 (* SHARP UNDEC))))
  (bflatDe . ,(ly:make-pitch -1 6 (/ 1 (* SHARP UNDEC))))

  (cflatDf . ,(ly:make-pitch -1 0 (/ 1 (* SHARP SYN))))
  (dflatDf . ,(ly:make-pitch -1 1 (/ 1 (* SHARP SYN))))
  (eflatDf . ,(ly:make-pitch -1 2 (/ 1 (* SHARP SYN))))
  (fflatDf . ,(ly:make-pitch -1 3 (/ 1 (* SHARP SYN))))
  (gflatDf . ,(ly:make-pitch -1 4 (/ 1 (* SHARP SYN))))
  (aflatDf . ,(ly:make-pitch -1 5 (/ 1 (* SHARP SYN))))
  (bflatDf . ,(ly:make-pitch -1 6 (/ 1 (* SHARP SYN))))

  (cDfDe . ,(ly:make-pitch -1 0 (/ 1 (* SYN UNDEC))))
  (dDfDe . ,(ly:make-pitch -1 1 (/ 1 (* SYN UNDEC))))
  (eDfDe . ,(ly:make-pitch -1 2 (/ 1 (* SYN UNDEC))))
  (fDfDe . ,(ly:make-pitch -1 3 (/ 1 (* SYN UNDEC))))
  (gDfDe . ,(ly:make-pitch -1 4 (/ 1 (* SYN UNDEC))))
  (aDfDe . ,(ly:make-pitch -1 5 (/ 1 (* SYN UNDEC))))
  (bDfDe . ,(ly:make-pitch -1 6 (/ 1 (* SYN UNDEC))))

  (csharpDfDfUe . ,(ly:make-pitch -1 0 (/ (* SHARP UNDEC) (* SYN SYN))))
  (dsharpDfDfUe . ,(ly:make-pitch -1 1 (/ (* SHARP UNDEC) (* SYN SYN))))
  (esharpDfDfUe . ,(ly:make-pitch -1 2 (/ (* SHARP UNDEC) (* SYN SYN))))
  (fsharpDfDfUe . ,(ly:make-pitch -1 3 (/ (* SHARP UNDEC) (* SYN SYN))))
  (gsharpDfDfUe . ,(ly:make-pitch -1 4 (/ (* SHARP UNDEC) (* SYN SYN))))
  (asharpDfDfUe . ,(ly:make-pitch -1 5 (/ (* SHARP UNDEC) (* SYN SYN))))
  (bsharpDfDfUe . ,(ly:make-pitch -1 6 (/ (* SHARP UNDEC) (* SYN SYN))))

  (cDe . ,(ly:make-pitch -1 0 (/ (* SHARP UNDEC) UNDEC)))
  (dDe . ,(ly:make-pitch -1 1 (/ 1 UNDEC)))
  (eDe . ,(ly:make-pitch -1 2 (/ 1 UNDEC)))
  (fDe . ,(ly:make-pitch -1 3 (/ 1 UNDEC)))
  (gDe . ,(ly:make-pitch -1 4 (/ 1 UNDEC)))
  (aDe . ,(ly:make-pitch -1 5 (/ 1 UNDEC)))
  (bDe . ,(ly:make-pitch -1 6 (/ 1 UNDEC)))
  
  (cDsDe . ,(ly:make-pitch -1 0 (* (/ 1 SEPT) (/ 1 UNDEC))))
  (dDsDe . ,(ly:make-pitch -1 1 (* (/ 1 SEPT) (/ 1 UNDEC))))
  (eDsDe . ,(ly:make-pitch -1 2 (* (/ 1 SEPT) (/ 1 UNDEC))))
  (fDsDe . ,(ly:make-pitch -1 3 (* (/ 1 SEPT) (/ 1 UNDEC))))
  (gDsDe . ,(ly:make-pitch -1 4 (* (/ 1 SEPT) (/ 1 UNDEC))))
  (aDsDe . ,(ly:make-pitch -1 5 (* (/ 1 SEPT) (/ 1 UNDEC))))
  (bDsDe . ,(ly:make-pitch -1 6 (* (/ 1 SEPT) (/ 1 UNDEC))))
  
  (cUfUsUe . ,(ly:make-pitch -1 0 (* SYN SEPT UNDEC)))
  (dUfUsUe . ,(ly:make-pitch -1 1 (* SYN SEPT UNDEC)))
  (eUfUsUe . ,(ly:make-pitch -1 2 (* SYN SEPT UNDEC)))
  (fUfUsUe . ,(ly:make-pitch -1 3 (* SYN SEPT UNDEC)))
  (gUfUsUe . ,(ly:make-pitch -1 4 (* SYN SEPT UNDEC)))
  (aUfUsUe . ,(ly:make-pitch -1 5 (* SYN SEPT UNDEC)))
  (bUfUsUe . ,(ly:make-pitch -1 6 (* SYN SEPT UNDEC)))
  
  (csharpDfUsDe . ,(ly:make-pitch -1 0 (* SHARP (/ 1 SYN) SEPT UNDEC)))
  (dsharpDfUsDe . ,(ly:make-pitch -1 1 (* SHARP (/ 1 SYN) SEPT UNDEC)))
  (esharpDfUsDe . ,(ly:make-pitch -1 2 (* SHARP (/ 1 SYN) SEPT UNDEC)))
  (fsharpDfUsDe . ,(ly:make-pitch -1 3 (* SHARP (/ 1 SYN) SEPT UNDEC)))
  (gsharpDfUsDe . ,(ly:make-pitch -1 4 (* SHARP (/ 1 SYN) SEPT UNDEC)))
  (asharpDfUsDe . ,(ly:make-pitch -1 5 (* SHARP (/ 1 SYN) SEPT UNDEC)))
  (bsharpDfUsDe . ,(ly:make-pitch -1 6 (* SHARP (/ 1 SYN) SEPT UNDEC)))
  
  (csharpDfDe . ,(ly:make-pitch -1 0 (* SHARP (/ 1 SYN) UNDEC)))
  (dsharpDfDe . ,(ly:make-pitch -1 1 (* SHARP (/ 1 SYN) UNDEC)))
  (esharpDfDe . ,(ly:make-pitch -1 2 (* SHARP (/ 1 SYN) UNDEC)))
  (fsharpDfDe . ,(ly:make-pitch -1 3 (* SHARP (/ 1 SYN) UNDEC)))
  (gsharpDfDe . ,(ly:make-pitch -1 4 (* SHARP (/ 1 SYN) UNDEC)))
  (asharpDfDe . ,(ly:make-pitch -1 5 (* SHARP (/ 1 SYN) UNDEC)))
  (bsharpDfDe . ,(ly:make-pitch -1 6 (* SHARP (/ 1 SYN) UNDEC)))
  
  (csharpDfDfDs . ,(ly:make-pitch -1 0 (* SHARP (/ 1 SYN) (/ 1 SYN) (/ 1 SEPT))))
  (dsharpDfDfDs . ,(ly:make-pitch -1 1 (* SHARP (/ 1 SYN) (/ 1 SYN) (/ 1 SEPT))))
  (esharpDfDfDs . ,(ly:make-pitch -1 2 (* SHARP (/ 1 SYN) (/ 1 SYN) (/ 1 SEPT))))
  (fsharpDfDfDs . ,(ly:make-pitch -1 3 (* SHARP (/ 1 SYN) (/ 1 SYN) (/ 1 SEPT))))
  (gsharpDfDfDs . ,(ly:make-pitch -1 4 (* SHARP (/ 1 SYN) (/ 1 SYN) (/ 1 SEPT))))
  (asharpDfDfDs . ,(ly:make-pitch -1 5 (* SHARP (/ 1 SYN) (/ 1 SYN) (/ 1 SEPT))))
  (bsharpDfDfDs . ,(ly:make-pitch -1 6 (* SHARP (/ 1 SYN) (/ 1 SYN) (/ 1 SEPT))))
  
  (csharpDsDe . ,(ly:make-pitch -1 0 (* SHARP (/ 1 SEPT) UNDEC)))
  (dsharpDsDe . ,(ly:make-pitch -1 1 (* SHARP (/ 1 SEPT) UNDEC)))
  (esharpDsDe . ,(ly:make-pitch -1 2 (* SHARP (/ 1 SEPT) UNDEC)))
  (fsharpDsDe . ,(ly:make-pitch -1 3 (* SHARP (/ 1 SEPT) UNDEC)))
  (gsharpDsDe . ,(ly:make-pitch -1 4 (* SHARP (/ 1 SEPT) UNDEC)))
  (asharpDsDe . ,(ly:make-pitch -1 5 (* SHARP (/ 1 SEPT) UNDEC)))
  (bsharpDsDe . ,(ly:make-pitch -1 6 (* SHARP (/ 1 SEPT) UNDEC)))
  
  (cflatUfDsUe . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) SYN (/ 1 SEPT) UNDEC)))
  (dflatUfDsUe . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) SYN (/ 1 SEPT) UNDEC)))
  (eflatUfDsUe . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) SYN (/ 1 SEPT) UNDEC)))
  (fflatUfDsUe . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) SYN (/ 1 SEPT) UNDEC)))
  (gflatUfDsUe . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) SYN (/ 1 SEPT) UNDEC)))
  (aflatUfDsUe . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) SYN (/ 1 SEPT) UNDEC)))
  (bflatUfDsUe . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) SYN (/ 1 SEPT) UNDEC)))
  
  (cUsDe . ,(ly:make-pitch -1 0 (/ SEPT UNDEC)))
  (dUsDe . ,(ly:make-pitch -1 1 (/ SEPT UNDEC)))
  (eUsDe . ,(ly:make-pitch -1 2 (/ SEPT UNDEC)))
  (fUsDe . ,(ly:make-pitch -1 3 (/ SEPT UNDEC)))
  (gUsDe . ,(ly:make-pitch -1 4 (/ SEPT UNDEC)))
  (aUsDe . ,(ly:make-pitch -1 5 (/ SEPT UNDEC)))
  (bUsDe . ,(ly:make-pitch -1 6 (/ SEPT UNDEC)))
  
  (cflatUfDe . ,(ly:make-pitch -1 0 (/ SYN (* SHARP UNDEC))))
  (dflatUfDe . ,(ly:make-pitch -1 1 (/ SYN (* SHARP UNDEC))))
  (eflatUfDe . ,(ly:make-pitch -1 2 (/ SYN (* SHARP UNDEC))))
  (fflatUfDe . ,(ly:make-pitch -1 3 (/ SYN (* SHARP UNDEC))))
  (gflatUfDe . ,(ly:make-pitch -1 4 (/ SYN (* SHARP UNDEC))))
  (aflatUfDe . ,(ly:make-pitch -1 5 (/ SYN (* SHARP UNDEC))))
  (bflatUfDe . ,(ly:make-pitch -1 6 (/ SYN (* SHARP UNDEC))))
  
  (cflatUfUe . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) SYN UNDEC)))
  (dflatUfUe . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) SYN UNDEC)))
  (eflatUfUe . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) SYN UNDEC)))
  (fflatUfUe . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) SYN UNDEC)))
  (gflatUfUe . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) SYN UNDEC)))
  (aflatUfUe . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) SYN UNDEC)))
  (bflatUfUe . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) SYN UNDEC)))
  
  (cDt . ,(ly:make-pitch -1 0 (/ 1 TRIDEC)))
  (dDt . ,(ly:make-pitch -1 1 (/ 1 TRIDEC)))
  (eDt . ,(ly:make-pitch -1 2 (/ 1 TRIDEC)))
  (fDt . ,(ly:make-pitch -1 3 (/ 1 TRIDEC)))
  (gDt . ,(ly:make-pitch -1 4 (/ 1 TRIDEC)))
  (aDt . ,(ly:make-pitch -1 5 (/ 1 TRIDEC)))
  (bDt . ,(ly:make-pitch -1 6 (/ 1 TRIDEC)))
  
  (cUfDt . ,(ly:make-pitch -1 0 (* SYN (/ 1 TRIDEC))))
  (dUfDt . ,(ly:make-pitch -1 1 (* SYN (/ 1 TRIDEC))))
  (eUfDt . ,(ly:make-pitch -1 2 (* SYN (/ 1 TRIDEC))))
  (fUfDt . ,(ly:make-pitch -1 3 (* SYN (/ 1 TRIDEC))))
  (gUfDt . ,(ly:make-pitch -1 4 (* SYN (/ 1 TRIDEC))))
  (aUfDt . ,(ly:make-pitch -1 5 (* SYN (/ 1 TRIDEC))))
  (bUfDt . ,(ly:make-pitch -1 6 (* SYN (/ 1 TRIDEC))))
  
  (cflatUfUfDs . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (dflatUfUfDs . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (eflatUfUfDs . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (fflatUfUfDs . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (gflatUfUfDs . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (aflatUfUfDs . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (bflatUfUfDs . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  
  (csharpUfUfUe . ,(ly:make-pitch -1 0 (* SHARP SYN SYN UNDEC)))
  (dsharpUfUfUe . ,(ly:make-pitch -1 1 (* SHARP SYN SYN UNDEC)))
  (esharpUfUfUe . ,(ly:make-pitch -1 2 (* SHARP SYN SYN UNDEC)))
  (fsharpUfUfUe . ,(ly:make-pitch -1 3 (* SHARP SYN SYN UNDEC)))
  (gsharpUfUfUe . ,(ly:make-pitch -1 4 (* SHARP SYN SYN UNDEC)))
  (asharpUfUfUe . ,(ly:make-pitch -1 5 (* SHARP SYN SYN UNDEC)))
  (bsharpUfUfUe . ,(ly:make-pitch -1 6 (* SHARP SYN SYN UNDEC)))
  
  (cDfDsDs . ,(ly:make-pitch -1 0 (* (/ 1 SYN) (/ 1 SEPT) (/ 1 SEPT))))
  (dDfDsDs . ,(ly:make-pitch -1 1 (* (/ 1 SYN) (/ 1 SEPT) (/ 1 SEPT))))
  (eDfDsDs . ,(ly:make-pitch -1 2 (* (/ 1 SYN) (/ 1 SEPT) (/ 1 SEPT))))
  (fDfDsDs . ,(ly:make-pitch -1 3 (* (/ 1 SYN) (/ 1 SEPT) (/ 1 SEPT))))
  (gDfDsDs . ,(ly:make-pitch -1 4 (* (/ 1 SYN) (/ 1 SEPT) (/ 1 SEPT))))
  (aDfDsDs . ,(ly:make-pitch -1 5 (* (/ 1 SYN) (/ 1 SEPT) (/ 1 SEPT))))
  (bDfDsDs . ,(ly:make-pitch -1 6 (* (/ 1 SYN) (/ 1 SEPT) (/ 1 SEPT))))

  (cdoubleflatUfUfDs . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (ddoubleflatUfUfDs . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (edoubleflatUfUfDs . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (fdoubleflatUfUfDs . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (gdoubleflatUfUfDs . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (adoubleflatUfUfDs . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) (/ 1 SHARP) SYN SYN (/ 1 SEPT))))
  (bdoubleflatUfUfDs . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) (/ 1 SHARP) SYN SYN (/ 1 SEPT))))

  (csharpDfUe . ,(ly:make-pitch -1 0 (* SHARP (/ 1 SYN) UNDEC)))
  (dsharpDfUe . ,(ly:make-pitch -1 1 (* SHARP (/ 1 SYN) UNDEC)))
  (esharpDfUe . ,(ly:make-pitch -1 2 (* SHARP (/ 1 SYN) UNDEC)))
  (fsharpDfUe . ,(ly:make-pitch -1 3 (* SHARP (/ 1 SYN) UNDEC)))
  (gsharpDfUe . ,(ly:make-pitch -1 4 (* SHARP (/ 1 SYN) UNDEC)))
  (asharpDfUe . ,(ly:make-pitch -1 5 (* SHARP (/ 1 SYN) UNDEC)))
  (bsharpDfUe . ,(ly:make-pitch -1 6 (* SHARP (/ 1 SYN) UNDEC)))

  (cDsUe . ,(ly:make-pitch -1 0 (* (/ 1 SEPT) UNDEC)))
  (dDsUe . ,(ly:make-pitch -1 1 (* (/ 1 SEPT) UNDEC)))
  (eDsUe . ,(ly:make-pitch -1 2 (* (/ 1 SEPT) UNDEC)))
  (fDsUe . ,(ly:make-pitch -1 3 (* (/ 1 SEPT) UNDEC)))
  (gDsUe . ,(ly:make-pitch -1 4 (* (/ 1 SEPT) UNDEC)))
  (aDsUe . ,(ly:make-pitch -1 5 (* (/ 1 SEPT) UNDEC)))
  (bDsUe . ,(ly:make-pitch -1 6 (* (/ 1 SEPT) UNDEC)))

  (cDfUt . ,(ly:make-pitch -1 0 (* (/ 1 SYN) TRIDEC)))
  (dDfUt . ,(ly:make-pitch -1 1 (* (/ 1 SYN) TRIDEC)))
  (eDfUt . ,(ly:make-pitch -1 2 (* (/ 1 SYN) TRIDEC)))
  (fDfUt . ,(ly:make-pitch -1 3 (* (/ 1 SYN) TRIDEC)))
  (gDfUt . ,(ly:make-pitch -1 4 (* (/ 1 SYN) TRIDEC)))
  (aDfUt . ,(ly:make-pitch -1 5 (* (/ 1 SYN) TRIDEC)))
  (bDfUt . ,(ly:make-pitch -1 6 (* (/ 1 SYN) TRIDEC)))

  (cUt . ,(ly:make-pitch -1 0 (* TRIDEC)))
  (dUt . ,(ly:make-pitch -1 1 (* TRIDEC)))
  (eUt . ,(ly:make-pitch -1 2 (* TRIDEC)))
  (fUt . ,(ly:make-pitch -1 3 (* TRIDEC)))
  (gUt . ,(ly:make-pitch -1 4 (* TRIDEC)))
  (aUt . ,(ly:make-pitch -1 5 (* TRIDEC)))
  (bUt . ,(ly:make-pitch -1 6 (* TRIDEC)))

  (cUsDt . ,(ly:make-pitch -1 0 (* SEPT (/ 1 TRIDEC))))
  (dUsDt . ,(ly:make-pitch -1 1 (* SEPT (/ 1 TRIDEC))))
  (eUsDt . ,(ly:make-pitch -1 2 (* SEPT (/ 1 TRIDEC))))
  (fUsDt . ,(ly:make-pitch -1 3 (* SEPT (/ 1 TRIDEC))))
  (gUsDt . ,(ly:make-pitch -1 4 (* SEPT (/ 1 TRIDEC))))
  (aUsDt . ,(ly:make-pitch -1 5 (* SEPT (/ 1 TRIDEC))))
  (bUsDt . ,(ly:make-pitch -1 6 (* SEPT (/ 1 TRIDEC))))

  (cflatUsUe . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) SEPT UNDEC))) 
  (dflatUsUe . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) SEPT UNDEC))) 
  (eflatUsUe . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) SEPT UNDEC))) 
  (fflatUsUe . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) SEPT UNDEC))) 
  (gflatUsUe . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) SEPT UNDEC))) 
  (aflatUsUe . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) SEPT UNDEC))) 
  (bflatUsUe . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) SEPT UNDEC))) 

  (cflatUfDt . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) SYN (/ 1 TRIDEC))))
  (dflatUfDt . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) SYN (/ 1 TRIDEC))))
  (eflatUfDt . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) SYN (/ 1 TRIDEC))))
  (fflatUfDt . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) SYN (/ 1 TRIDEC))))
  (gflatUfDt . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) SYN (/ 1 TRIDEC))))
  (aflatUfDt . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) SYN (/ 1 TRIDEC))))
  (bflatUfDt . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) SYN (/ 1 TRIDEC))))

  (cdoubleflatUfDs . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) (/ 1 SHARP) SYN (/ 1 SEPT))))
  (ddoubleflatUfDs . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) (/ 1 SHARP) SYN (/ 1 SEPT))))
  (edoubleflatUfDs . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) (/ 1 SHARP) SYN (/ 1 SEPT))))
  (fdoubleflatUfDs . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) (/ 1 SHARP) SYN (/ 1 SEPT))))
  (gdoubleflatUfDs . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) (/ 1 SHARP) SYN (/ 1 SEPT))))
  (adoubleflatUfDs . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) (/ 1 SHARP) SYN (/ 1 SEPT))))
  (bdoubleflatUfDs . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) (/ 1 SHARP) SYN (/ 1 SEPT))))

  (cflatUfDsDs . ,(ly:make-pitch -1 0 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT))))
  (dflatUfDsDs . ,(ly:make-pitch -1 1 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT))))
  (eflatUfDsDs . ,(ly:make-pitch -1 2 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT))))
  (fflatUfDsDs . ,(ly:make-pitch -1 3 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT))))
  (gflatUfDsDs . ,(ly:make-pitch -1 4 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT))))
  (aflatUfDsDs . ,(ly:make-pitch -1 5 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT))))
  (bflatUfDsDs . ,(ly:make-pitch -1 6 (* (/ 1 SHARP) SYN (/ 1 SEPT) (/ 1 SEPT))))
)


helmholtzEllisGlyphs = #`(
	(0 . "accidentals.natural")
	(2187/2048 . "accidentals.sharp")
  	(2048/2187 . "accidentals.flat")
  	(4782969/4194304 . "accidentals.doublesharp")
  	(4194304/4782969 . "accidentals.doubleflat")
	(81/80 . "accidentals.u5")
	(80/81 . "accidentals.d5")
	(36/35 . "accidentals.u5.u7")
	(35/36 . "accidentals.d5.d7")
	(135/128 . "accidentals.sharp.d5")
	(177147/163840 . "accidentals.sharp.u5")
	(25/24 . "accidentals.sharp.d5.d5")
	(128/135 . "accidentals.flat.u5")
	(163840/177147 . "accidentals.flat.d5")
	(64/63 . "accidentals.u7")
	(63/64 . "accidentals.d7")
	(4096/3969 . "accidentals.u7.u7")
	(3969/4096 . "accidentals.d7.d7")
	(250047/262144 . "accidentals.d7.d7.d7")
	(224/243 . "accidentals.flat.d7")
	(49/54 . "accidentals.flat.d7.d7")
	(343/384 . "accidentals.flat.d7.d7.d7")
	(243/224 . "accidentals.sharp.u7")
	(14/15 . "accidentals.flat.u5.d7")
	(15/14 . "accidentals.sharp.d5.u7")
	(33/32 . "accidentals.u11")
	(32/33 . "accidentals.d11")
	(72171/65536 . "accidentals.sharp.u11")
	(5103/5120 . "accidentals.u5.d7")
	(26/27 . "accidentals.d13")
	(2048/2079 . "accidentals.u7.d11")
	(4096/4455 . "accidentals.flat.u5.d11")
	(44/45 . "accidentals.flat.u5.u11")
	(80/77 . "accidentals.sharp.d5.u7.d11")
	(21/22 . "accidentals.d7.d11")
	(45/44 . "accidentals.sharp.d5.d11")
	(8192/8505 . "accidentals.flat.u5.u7")
	(39/40 . "accidentals.u5.d13")
	(39/40 . "accidentals.d5.u7")
	(55/54 . "accidentals.d5.u11")
	(297/280 . "accidentals.u5.u7.u11")
	(4851/5120 . "accidentals.flat.u5.d7.d7.u11")
	(23202182619/21474836480 . "accidentals.sharp.u5.d7.d7.u11")
	(539/576 . "accidentals.flat.d7.d7.u11")
	(77/81 . "accidentals.flat.d7.u11")
	(704/729 . "accidentals.flat.u11")
	(77/80 . "accidentals.flat.u5.d7.u11")
	(4546773/4194304 . "accidentals.sharp.d7.d11")
	(5120/5103 . "accidentals.d5.u7")
	(189/200 . "accidentals.flat.u5.u5.d7")
	(473513931/419430400 . "accidentals.sharp.u5.u5.u11")
	(245/256 . "accidentals.d5.d7.d7")
	(4455/4096 . "accidentals.sharp.d5.d11")
	(54/49 . "accidentals.sharp.u7.u7")
	
	(143/144 . "accidentals.u11.d13")
	(65536/72171 . "accidentals.flat.d11")
	(24/25 . "accidentals.flat.u5.u5")
	(2079/2048 . "accidentals.d7.u11")
	(1792/2025 . "accidentals.flatflat.u5.u5.d7")
	(40/39 . "accidentals.d5.u13")
	(27/26 . "accidentals.u13")
	(3328/3645 . "accidentals.flat.u5.d13")
	(22/21 . "accidentals.u7.u11")

	(28672/32805 . "accidentals.flatflat.u5.d7")
	(1664/1701 . "accidentals.u7.d13")
	(45056/45927 . "accidentals.flat.u7.u11")
	(131072/137781 . "accidentals.flat.u7")
	(262144/295245 . "accidentals.flatflat.u5")
	(8505/8192 . "accidentals.sharp.d5.d7")
	(525/512 . "accidentals.sharp.d5.d5.d7")

	(147/160 . "accidentals.flatflat.u5.d7.d7")
	(16384/18225 . "accidentals.flatflat.u5.u5")
)

%% set pitch names.
pitchnames = \helmholtzEllisNames 
#(ly:parser-set-note-names helmholtzEllisNames)

\layout {
  \context {
    \Score
    \override KeySignature #'glyph-name-alist = \helmholtzEllisGlyphs
    \override Accidental #'glyph-name-alist = \helmholtzEllisGlyphs
    \override AccidentalCautionary #'glyph-name-alist = \helmholtzEllisGlyphs
    \override TrillPitchAccidental #'glyph-name-alist = \helmholtzEllisGlyphs
    \override AmbitusAccidental #'glyph-name-alist = \helmholtzEllisGlyphs
  }
}



